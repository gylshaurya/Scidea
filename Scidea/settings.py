"""
Django settings for Scidea project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
import environ

load_dotenv()

import cloudinary.api
import dj_database_url

BASE_DIR = Path(__file__).resolve().parent.parent

SESSION_ENGINE = 'django.contrib.sessions.backends.db'

SECRET_KEY = 'django-insecure-9l018)f5chmo^tz97&#=8v9)8-ld4w+fx4@0z4x9a4_n^xelz7'

DEBUG = True

ALLOWED_HOSTS = ["*"]

SITE_ID = 1

INSTALLED_APPS = [
    'ideas',
    'users',


    'django.contrib.admin',
    'django.contrib.sites',


    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'django.contrib.auth',


    # 'ckeditor',
    # 'ckeditor_uploader',


    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    'cloudinary_storage',
    'cloudinary'
]





#----------------------------------------------------------------------------------------------------------
#AUTH SETTINGS




AUTH_USER_MODEL = 'users.CustomUser'

# Allauth settings
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_LOGOUT_REDIRECT_URL = "/"
ACCOUNT_SIGNUP_REDIRECT_URL = "/users/set-username/"
SOCIALACCOUNT_SIGNUP_REDIRECT_URL = "/users/set-username/"
LOGIN_REDIRECT_URL = "/"
SOCIALACCOUNT_AUTO_SIGNUP = True  # Allow automatic signup via Google
SOCIALACCOUNT_LOGIN_ON_GET = True


AUTHENTICATION_BACKENDS = [
    'users.backends.EmailAuthBackend',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": ["profile", "email"],
        "AUTH_PARAMS": {"access_type": "online"},
        "OAUTH_PKCE_ENABLED": True,
    }
}

SOCIALACCOUNT_PROVIDERS['google']['APP'] = {
    "client_id": "854951858535-5lca154045kjhlkoq0blhico55op4lun.apps.googleusercontent.com",
    "secret": "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",
    "key": ""
}

CSRF_TRUSTED_ORIGINS = ["http://127.0.0.1:8000"]


#-----------------------------------------------------------------------------------------------------------
#Editor Settings

# CKEDITOR_UPLOAD_PATH = "uploads/"
# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': [
#             ['Bold', 'Italic', 'Underline'],
#             ['NumberedList', 'BulletedList'],
#             ['Link', 'Unlink'],
#             ['Blockquote', 'CodeSnippet'],
#             ['Image'],
#             ['JustifyLeft', 'JustifyCenter', 'JustifyRight'],
#             ['RemoveFormat', 'Source']
#         ],
#         'height': 300,
#         'width': '100%',
#         'extraPlugins': 'codesnippet',
#         'removePlugins': 'table,font,colorbutton',
#         'toolbarCanCollapse': False,
#     }
# }


#-----------------------------------------------------------------------------------------------------------



# Cloudinary Configuration
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'drferwkzw',
    'API_KEY': '611455434812374',
    'API_SECRET': 'NWCsbvCoqcmwXjieES0lokou6X4',
}

cloudinary.config(
    cloud_name=CLOUDINARY_STORAGE["CLOUD_NAME"],
    api_key=CLOUDINARY_STORAGE["API_KEY"],
    api_secret=CLOUDINARY_STORAGE["API_SECRET"],
    secure=True,
)

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'









#------------------------------------------------------------------------------------------------------------

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


env = environ.Env()
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


#-------------------------------------------------------------------------------------------------------------
#Static Media Settings


ROOT_URLCONF = 'Scidea.urls'
WSGI_APPLICATION = 'Scidea.wsgi.application'


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# URL to serve static files
STATIC_URL = '/static/'

# Directory where static files will be collected for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Additional directories to look for static files during development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#-----------------------------------------------------------------------------------------------------










































